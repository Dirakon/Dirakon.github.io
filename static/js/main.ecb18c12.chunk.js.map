{"version":3,"sources":["components/LongProjectInfo.jsx","components/ShortProjectInfo.jsx","components/SingularProject.jsx","components/ProjectList.jsx","images/The_Branch_Office.png","images/tbo_gp.mp4","images/de.png","images/de_edited.mp4","App.js","index.js"],"names":["LongProjectInfo","props","className","width","autoPlay","loop","muted","playsInline","src","video","type","children","ShortProjectInfo","onClick","arg","target","startsWith","parentNode","classList","toggle","image","title","description","SingularProject","ProjectList","projects","map","project","index","actual","App","useState","imageTBO","gifTBO","href","imageDE","gifDE","ReactDOM","render","document","getElementById"],"mappings":"iQAeeA,EAbS,SAAUC,GAC9B,OAAO,qBAAKC,UAAU,yBAAf,SACH,sBAAKA,UAAU,kBAAf,UACI,uBAAOC,MAAM,OAAOC,UAAQ,EAACC,MAAI,EAACC,OAAK,EAACC,aAAW,EAAnD,SACI,wBAAQC,IAAKP,EAAMQ,MAAOC,KAAK,gBAEnC,uBACCT,EAAMU,eCaJC,G,MApBU,SAAUX,GAS/B,OAAO,sBAAMC,UAAU,0BAA0BW,QARjC,SAAUC,GAEtB,IADAA,EAAMA,EAAIC,QACFD,EAAIZ,UAAUc,WAAW,gBAC7BF,EAAMA,EAAIG,WAEdH,EAAII,UAAUC,OAAO,cAGlB,UACH,qBAAKjB,UAAU,eAAeM,IAAKP,EAAMmB,QACzC,sBAAKlB,UAAU,mBAAf,UACI,wBAAQA,UAAU,eAAlB,SAAkCD,EAAMoB,QACxC,uBACA,mBAAGnB,UAAU,qBAAb,SAAmCD,EAAMqB,sBCFtCC,EAVS,SAAUtB,GAM9B,OALU,sBAAKC,UAAU,wBAAf,UACN,cAAC,EAAD,CAAkBmB,MAASpB,EAAMoB,MAAOC,YAAerB,EAAMqB,YAAaF,MAASnB,EAAMmB,QACzF,cAAC,EAAD,CAAiBX,MAASR,EAAMQ,MAAhC,SAAwCR,EAAMU,eCQvCa,G,MAZK,SAAUvB,GAC1B,OAAO,sBAAMC,UAAU,cAAhB,UACH,6BACKD,EAAMoB,QAEVpB,EAAMwB,SAASC,KAAI,SAACC,EAASC,GAAV,OAChB,eAAC,EAAD,CAAiBP,MAAOM,EAAQN,MAAOC,YAAaK,EAAQL,YAAaF,MAASO,EAAQP,MAAOX,MAASkB,EAAQlB,MAAlH,cAAuIkB,EAAQE,SAAjBD,WCT3H,MAA0B,8CCA1B,MAA0B,mCCA1B,MAA0B,+BCA1B,MAA0B,sC,MCwC1BE,MAjCf,WACE,MAAgCC,mBAAS,CACvC,CAAEV,MAAO,QAASC,YAAa,mFAAoFF,MAAOY,GAC1H,CACEX,MAAO,oBAAqBC,YAAa,6FAA8FF,MAAOY,EAAUvB,MAAOwB,EAAQJ,OACvK,8BACE,uUAGoB,mBAAGK,KAAM,4CAAT,sBAHpB,YAG+F,mBAAGA,KAAM,oDAAT,oCAInG,CAAEb,MAAO,6BAA8BC,YAAa,mFAAoFF,MAAOY,GAC/I,CACEX,MAAO,eAAgBC,YAAa,+EAAgFF,MAAOe,EAAS1B,MAAO2B,EAAOP,OAClJ,8BACE,6JAC8H,uBAD9H,oGAEmG,uBAFnG,qBAGoB,mBAAGK,KAAM,0CAAT,sBAHpB,YAG6F,mBAAGA,KAAM,0CAAT,sCAnBnG,mBAAOT,EAAP,KAwBA,OAxBA,KAyBE,sBAAKvB,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CAAauB,SAAUA,EAAUJ,MAAM,oBC/B7CgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecb18c12.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './../styles/LongProjectInfo.css'\nconst LongProjectInfo = function (props) {\n    return <div className=\"longProjectInfoWrapper\">\n        <div className=\"longProjectInfo\">\n            <video width=\"100%\" autoPlay loop muted playsInline>\n                <source src={props.video} type=\"video/mp4\" />\n            </video>\n            <br />\n            {props.children}\n        </div>\n    </div>\n}\n\n\nexport default LongProjectInfo;","import React, { useState } from \"react\";\nimport './../styles/ShortProjectInfo.css'\nconst ShortProjectInfo = function (props) {\n    let clickFunc = function (arg) {\n        arg = arg.target\n        while (!arg.className.startsWith('fullProject')) {\n            arg = arg.parentNode;\n        }\n        arg.classList.toggle(\"collapsed\")\n    }\n\n    return < div className=\"shortProjectInfoWrapper\" onClick={clickFunc}>\n        <img className=\"projectImage\" src={props.image} />\n        <div className=\"shortProjectInfo\">\n            <strong className=\"projectTitle\">{props.title}</strong>\n            <br />\n            <a className=\"projectDescription\">{props.description}</a>\n        </div>\n    </div>\n}\n\n\nexport default ShortProjectInfo;","import React, { useState } from \"react\";\nimport './../styles/SingularProject.css'\nimport LongProjectInfo from \"./LongProjectInfo\";\nimport ShortProjectInfo from \"./ShortProjectInfo\";\nconst SingularProject = function (props) {\n    let obj = <div className=\"fullProject collapsed\">\n        <ShortProjectInfo title = {props.title} description = {props.description} image = {props.image}/>\n        <LongProjectInfo video = {props.video}>{props.children}</LongProjectInfo>\n    </div>\n\n    return obj\n}\n\n\nexport default SingularProject;","import React, { useState } from \"react\";\nimport SingularProject from \"./SingularProject\";\nimport './../styles/ProjectList.css'\nconst ProjectList = function (props) {\n    return < div className=\"projectList\">\n        <h2>\n            {props.title}\n        </h2>\n        {props.projects.map((project, index) =>\n            <SingularProject title={project.title} description={project.description} image = {project.image} video = {project.video} key={index}> {project.actual}</SingularProject>\n        )}\n    </div>\n}\n\n\nexport default ProjectList;","export default __webpack_public_path__ + \"static/media/The_Branch_Office.60f21c4b.png\";","export default __webpack_public_path__ + \"static/media/tbo_gp.2f780bdf.mp4\";","export default __webpack_public_path__ + \"static/media/de.26a57825.png\";","export default __webpack_public_path__ + \"static/media/de_edited.ee353ed9.mp4\";","import React, { useState } from \"react\";\nimport ProjectList from \"./components/ProjectList\";\nimport imageTBO from \"./images/The_Branch_Office.png\"\nimport gifTBO from \"./images/tbo_gp.mp4\"\nimport imageDE from \"./images/de.png\"\nimport gifDE from \"./images/de_edited.mp4\"\nimport './styles/App.css'\nfunction App() {\n  const [projects, setProjects] = useState([\n    { title: \"Scion\", description: \"App for programming on mobile devices with my custom visual programming language\", image: imageTBO },\n    {\n      title: \"The Branch Office\", description: \"Game made in a week about managing workers and not letting the office fall from the branch\", image: imageTBO, video: gifTBO, actual: \n      <div>\n        <p>\n          A game made for game jam in a week. It presents a challange to the player, as they have to manage the workers to do their job while making sure that \n          the office is not on the verge of falling. I have not only coded the game, but also have drawn all the sprites and animations.\n          You can check out <a href={\"https://dirakon.itch.io/the-office-branch\"}>the game</a> and see <a href={\"https://github.com/Dirakon/The-Branch-Office-Game\"}>the source code.</a>\n        </p>\n      </div>\n    },\n    { title: \"Mobile Continent Generator\", description: \"Mobile app that lets the user observe some randomly generated worlds and nations\", image: imageTBO },\n    {\n      title: \"DialogEditor\", description: \"Website for creating and experiencing dialogs with my custom dialog language\", image: imageDE, video: gifDE, actual: \n      <div>\n        <p>\n          Interactive dialog editor where the user can program their own dialogs using dialog writing 'scripting' language made by me.<br />\n          Supports variables, tags, if statements, and more. Includes dialog example when opening the site.<br />\n          You can check out <a href={\"https://dirakon.github.io/dialogEditor/\"}>the site</a> and see <a href={\"https://github.com/Dirakon/dialogEditor\"}>the source code.</a>\n        </p>\n      </div>\n    }\n  ]);\n  return (\n    <div className=\"App\">\n      <h1>My portfolio</h1>\n      <ProjectList projects={projects} title=\"My projects\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}